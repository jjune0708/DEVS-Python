package CellularAutomata.Chemotaxis;

import java.awt.Dimension;
import java.awt.Point;
import java.util.Random;

import model.modeling.CAModels.TwoDimCellSpace;
import view.modeling.ViewableComponent;

public class ChemotaxisSpace extends TwoDimCellSpace {

	private final String[] statusCXCL12 = { "EMPTY", "EMPTY", "EMPTY", "CXCL12" };
	private final String[] statusCXCLR4 = { "EMPTY", "EMPTY", "EMPTY","CXCR4" };
	private final String[] statusCXCLR7 = { "EMPTY", "EMPTY", "EMPTY", "CXCR7" };

	public ChemotaxisSpace() {
		this(3,2);
	}

	public ChemotaxisSpace(int xDim, int yDim) {
		super("Chemotaxis", xDim, yDim);

		this.numCells = xDim * yDim;
		for (int i = 0; i < xDimCellspace; i++) {
			for (int j = 0; j < yDimCellspace; j++) {
				ChemotaxisGridCell cell = new ChemotaxisGridCell(i, j);
				addCell(cell);

				Random randomno = new Random();

				if (i <= xDimCellspace / 3) {
					cell.setInitialStatus(statusCXCL12[randomno.nextInt(statusCXCL12.length)]);
				} else if (i >= xDimCellspace / 3 * 2) {
					cell.setInitialStatus(statusCXCLR4[randomno.nextInt(statusCXCLR4.length)]);
				} else {
					cell.setInitialStatus(statusCXCLR7[randomno.nextInt(statusCXCLR7.length)]);
				}
				

				cell.initialize();
			}
		}

		doNeighborToNeighborCoupling();

	}

    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(800, 700);
        ((ViewableComponent)withName("Cell: 4, 1")).setPreferredLocation(new Point(149, 238));
        ((ViewableComponent)withName("Cell: 1, 0")).setPreferredLocation(new Point(222, 96));
        ((ViewableComponent)withName("Cell: 4, 0")).setPreferredLocation(new Point(-17, 229));
        ((ViewableComponent)withName("Cell: 2, 0")).setPreferredLocation(new Point(361, 280));
        ((ViewableComponent)withName("Cell: 2, 3")).setPreferredLocation(new Point(366, 33));
        ((ViewableComponent)withName("Cell: 3, 2")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 0, 3")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 2, 2")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 2, 4")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 0, 4")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 2, 1")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 3, 3")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 1, 3")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 3, 0")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 1, 4")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 0, 1")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 4, 3")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 4, 2")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 0, 0")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 0, 2")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 1, 2")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 4, 4")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 3, 4")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 3, 1")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("Cell: 1, 1")).setPreferredLocation(new Point(50, 50));
    }
}
